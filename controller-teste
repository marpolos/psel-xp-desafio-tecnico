/* import sinon from 'sinon';
import { expect } from 'chai';
import ContaController from '../../controllers/contas.controller';
import ContasService from '../../services/contas.service';

import { contasMock, ID } from '../mocks';
import Cliente from '../../classes/Cliente';

const response: { status: any, json?: object } = {};
const request = {};
const next = {
  next: (args) => {},
};
const nextSpy = sinon.spy(next, 'next');

describe('ContaController', () => {
  describe('getById', () => {
    test('Quando passa um id válido e o service retorna status 200 e um data com o cliente', async () => {
      beforeEach(async () => {
        const { codCliente, saldo, nome } = contasMock[0];
        sinon.stub(ContasService, 'getById').resolves({
          statusCode: 200,
          data: { codCliente, nome, saldo: Number(saldo) } as Cliente,
        });

        response.status = sinon.stub().returns(response);
        response.json = sinon.stub().returns();
      });

      afterEach(async () => {
        ContasService.getById.restore();
      });

      const { codCliente, nome, saldo } = contasMock[0];
      const mockCliente = new Cliente(nome, Number(saldo), codCliente);
      
    });
    test('Quando envia um id inválido retorna status 404 e a message "Conta não encontrada"', () => {
        
    });
  });
}); */
